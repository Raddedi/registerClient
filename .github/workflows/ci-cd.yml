name: CI/CD with SonarCloud and Docker Hub

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Analyze, and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for SonarCloud analysis

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # Step 3: Cache SonarCloud packages
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Step 4: Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 5: Build and analyze with SonarCloud
      - name: Build and analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # Enables PR decoration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     # Token from SonarCloud
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=Raddedi_registerClient \
            -Dsonar.organization=raddedi \
            -Dsonar.host.url=https://sonarcloud.io

      # Step 6: Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_NAME=alaraddedi/register-client
          GIT_SHA=${{ github.sha }}
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$GIT_SHA .

      # Step 7: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 8: Push Docker image
      - name: Push Docker image to Docker Hub
        run: |
          IMAGE_NAME=alaraddedi/register-client
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}
